=============================
The 0-add_integer module
=============================

Using add_integer
---------------------

Import function

    >>> add_integer = __import__('0-add_integer').add_integer

Adding two integuers
>>> add_integer(9 , 8)
17

Adding float and int both positives
>>> add_integer(3.5, 4)
7

Adding float and int both negatives
>>> add_integer(-3.5, -4)
-7

Adding two floats positives
>>> add_integer(2.2, 3.5)
5

Add a negative and a positive number and return a positive number
>>> add_integer(-3, 5)
2

Add a negative and a positive number and return a negative number
>>> add_integer(-10, 5)
-5

See if the error comes out when a = "string" and b = int is entered
>>> add_integer("abc", 2)
Traceback (most recent call last):
TypeError: a must be an integer

See if the error comes out when a = int and b = "string" is entered
>>> add_integer(2, "abb")
Traceback (most recent call last):
TypeError: b must be an integer

check None
>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

>>> add_integer(1000e1000)
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer("Hola", "Valentina")
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(??.!?")
Traceback (most recent call last):
SyntaxError: invalid syntax

>>> add_integer(1000x00, 2)
Traceback (most recent call last):
SyntaxError: invalid syntax

>>> add_integer(2)
100

# Test 7 - Variable not defined as parameter
>>> add_integer(a, 17)
Traceback (most recent call last):
NameError: name 'a' is not defined